#!/usr/bin/env sh

# Layout System
yabai -m config layout                        bsp
yabai -m config mouse_follows_focus           on
yabai -m config focus_follows_mouse           autoraise
yabai -m config window_topmost                off
yabai -m config window_shadow                 on
yabai -m config window_opacity                off
yabai -m config active_window_opacity         1.0
yabai -m config normal_window_opacity         0.8
yabai -m config window_border                 off
yabai -m config active_window_border_color    0xff72ee7a
yabai -m config normal_window_border_color    0xffffffff
yabai -m config auto_balance                  on


# Variables
CENTERED_GRID=4:4:1:1:2:2


# Window Padding
SPACEBAR_HEIGHT=$(spacebar -m config height)
yabai -m config external_bar all:$SPACEBAR_HEIGHT:0
yabai -m config top_padding    5
yabai -m config bottom_padding 5
yabai -m config left_padding   5
yabai -m config right_padding  5
yabai -m config window_gap     5

# Applications
yabai -m rule --add app="^System Preferences$" manage=off grid=$CENTERED_GRID
# yabai -m rule --add app="^Simulator$" manage=off sticky=on layer=above
yabai -m rule --add app="^Digital Colou?r Meter$" sticky=on grid=5:5:4:4:1:1

# Delete Empty Spaces
read -r -d '' destroy_space <<- 'EOF'
  recent_space_index="$(yabai -m query --spaces | 
    jq -er 'map(select(.id | tostring == env.YABAI_RECENT_SPACE_ID))[0].index')"
  if yabai -m query --windows --space "${recent_space_index}" |
    jq -er 'length == 0'
  then
    yabai -m space "${recent_space_index}" --destroy
  fi
EOF

yabai -m signal --add event="space_changed" action="${destroy_space}"
yabai -m signal --add event="application_terminated" action="${destroy_space}"

